# AWStats設定ファイル 7.0
#-----------------------------------------------------------------------------
# このファイルをawstats.www.mydomain.confという名前でコピーし, コピーした
# ファイルをAWStatsを設定する際に利用して下さい(docsディレクトリの文書を
# 参照してください).
# この設定ファイルは, /etc/awstats, /usr/local/etc/awstats, あるいは/etc
# (UNIX/Linuxの場合)か, awstats.plと同じディレクトリ(Windows, Mac, Unix
# /Linuxなど)に存在しなくてはなりません.
# 環境変数を任意のパラメータにインクルードする場合には, 以下の書式に従って
# 設定して下さい(AWStatが読み込む際に, 値を置換します).
# Parameter="__ENVNAME__"
# 起動されたAWStatsのセッションはAWSTATS_CURRENT_CONFIGという名前の環境変数
# を常に設定していますが, そのほかの環境変数と同様に利用できるので, 注意して
# ください.
#-----------------------------------------------------------------------------
# $Revision: 1.350 $ - $Author: eldy $ - $Date: 2010/09/29 19:16:21 $
# 日本語化 by Ryu Hiyoshi <ryu@kk.iij4u.or.jp> 2011.01.06



#-----------------------------------------------------------------------------
# メインセットアップセクション (AWStatsの動作に必要とされる設定)
#-----------------------------------------------------------------------------

# "LogFile"には, 解析したいWeb/FTP/Mailサーバーのログファイルを指定します.
# 取り得る値: フルパス, もしくはawstats.plがあるディレクトリからの相対パス.
# 例: "/var/log/apache/access.log"
# 例: "../logs/mycombinedlog.log"
# 日時によってログファイル名が変化する場合, ファイル名の中にタグを利用する
# こともできます(解析開始時にAWStatsが置換を行います).
# 以下に利用可能なタグを示します:
#   %YYYY-n  は, n時間前の年度(4桁)に置換されます
#   %YY-n    は, n時間前の年度(2桁)に置換されます
#   %MM-n    は, n時間前の月に置換されます
#   %MO-n    は, n時間前の月(3文字表記, Jan=1月など)に置換されます
#   %DD-n    は, n時間前の日に置換されます
#   %HH-n    は, n時間前の時間に置換されます
#   %NS-n    は, 00:00時点での1970年からの秒数に置換されます
#   %WM-n    は, 当該月の中の週数に置換されます (1-5)
#   %Wm-n    は, 当該月の中の週数に置換されます (0-4)
#   %WY-n    は, 当該年の中の週数に置換されます (1-52)
#   %Wy-n    は, 当該年の中の週数に置換されます (00-51)
#   %DW-n    は, 当該週の中の日数に置換されます (1-7, 1=日曜日)
#            必要に応じて, n=24を利用して下さい (1-7, 1=月曜日)
#   %Dw-n    は, 当該週の中の日数に置換されます (0-6, 0=日曜日)
#            必要に応じて, n=24を利用して下さい (0-6, 0=月曜日)
#   nに0を設定すれば, 当年/当月/当週/当日....になります.
# 例: "/var/log/access_log.%YYYY-0%MM-0%DD-0.log"
# 例: "C:/WINNT/system32/LogFiles/W3SVC1/ex%YY-24%MM-24%DD-24.log"
# ログファイルがパイプ経由で渡される場合, パイプを利用することも可能です.
# 例: "gzip -d </var/log/apache/access.log.gz |"
# 負荷分散環境下で複数のログファイルが存在する場合, 下例を参考にして下さい :
# 例: "/pathtotools/logresolvemerge.pl *.log |"
#
LogFile="/var/log/httpd/mylog.log"


# 解析したいログの種別を指定します.
# 取りうる値:
#  W - Webサイトのログファイル
#  S - ストリーミングサーバのログファイル
#  M - メールサーバのログファイル
#  F - FTPサーバのログファイル
# 例: W
# 規定値: W
#
LogType=W


# ログの形式を指定します(Webサーバの設定と一致している必要があります.
# 同梱されている文書のセットアップインストラクションに, 必要とされるログ
# 形式でWebサーバにログを出力させるための設定方法が解説されています).
# 取り得る値: 1,2,3,4 もしくは "your_own_personalized_log_format"
# 1 - ApacheもしくはLotus Notes/Dominoのnative combinedログ形式
#     (NCSA combined/XLF/ELFログ形式).
# 2 - IISもしくはISAのログ形式 (IIS W3Cログ形式). 
#     ISAについてはFAQ-COM115を参照してください.
# 3 - Webstar nativeログ形式.
# 4 - Apache / Squid native commonログ形式 (NCSA common/CLFログ形式)
#     LogFormat=4で利用した場合, いくつかの機能(ブラウザ, OS,
#     検索キーワード)は動作しません.
# "your_own_personalized_log_format" = ログがFTPやメール, そのほかの形式で
#     ある場合, 以下のキーを利用してログ形式を定義する必要があります(FTP,
#     メール, 特殊なWebサーバのログ形式のサンプルについては, FAQを参照して
#     ください.)
#   %host             ホスト名, もしくはIPアドレス(メールログの場合は送信ホスト名)
#   %host_r           受信ホスト名, もしくはIPアドレス(メールログ用)
#   %lognamequot      次の形式で表現される認証されたログイン/ユーザ: "john"
#   %logname          次の形式で表現される認証されたログイン/ユーザ: john
#   %time1            次の形式の年月日/時間: [dd/mon/yyyy:hh:mm:ss +0000]
#                     もしくは次の形式の年月日/時間: [dd/mon/yyyy:hh:mm:ss]
#   %time2            次の形式の年月日/時間: yyyy-mm-dd hh:mm:ss
#   %time3            次の形式の日付/時間: Mon dd hh:mm:ss
#                     もしくは次の形式の年月日/時間: Mon dd hh:mm:ss yyyy
#   %time4            UNIXタイムスタンプ形式の年月日/時間表示t: dddddddddd
#   %methodurl        次の形式のメソッドとURL: "GET /index.html HTTP/x.x"
#   %methodurlnoprot  次の形式のメソッドとURL: "GET /index.html"
#   %method           以下の形式のメソッド: GET
#   %url              以下の形式のURL: /index.html
#   %query            クエリストリング (URLWithQueryオプションが利用)
#   %code             リターンコードステータス (Webのログでは3桁の数字)
#   %bytesd           バイト単位でのドキュメントサイズ
#   %refererquot      次の形式のReferer: "http://from.com/from.htm"
#   %referer          次の形式のReferer: http://from.com/from.htm
#   %uabracket        次の形式のUser agent: [Mozilla/4.0 (compatible, ...)]
#   %uaquot           次の形式のUser agent: "Mozilla/4.0 (compatible, ...)"
#   %ua               次の形式のUser agent: Mozilla/4.0_(compatible...)
#   %gzipin           mod_gzipへの入力バイト数: In:XXX
#   %gzipout          mod_gzipからの出力バイト数と圧縮率: Out:YYY:ZZZpct.
#   %gzipratio        mod_gzipの圧縮率: ZZZpct.
#   %deflateratio     以下の形式のMod_deflateの圧縮率: (ZZ)
#   %email            電子メールの送信者 (メールログ用)
#   %email_r          電子メールの受信者 (メールログ用)
#   %virtualname      Webサーバーのバーチャルホスト名. 単一のログに複数の
#                     バーチャルホストのログが含まれる場合に使用してください.
#                     SiteDomainにもHostAliasesにも存在しないレコードは,
#                     AWStatsは廃棄します.
#   %cluster          複数のマシンからログファイルが提供されている
#                     (logresolvemerge.plでマージされている)場合, このタグで
#                     クラスタIDフィールドを定義します.
#   %extraX           ExtraSection機能(後述)を利用して, 特別のレポートを作成
#                     したい場合に利用するフィールド.
#   上記以外のフィールドがログに存在する場合, 以下のフィールドを利用します.
#   %other            上記以外のフィールドであることを示します.
#   %otherquot        上記以外の二重引用符付のフィールドであることを示します.
#
# Apache combined logsの例 (以下の2つの例は同じ意味を持ちます):
# LogFormat = 1
# LogFormat = "%host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot"
#
# IISの例:
# LogFormat = 2
#
LogFormat=1


# ログのフィールドセパレータがスペースでない場合, 以下のパラメータを利用すれば
# 変更することが出来ます. このパラメータはLogFormatに定義済みの値(1,2,3,4)
# が指定されている場合は利用されません.
# 例: " "
# 例: "\t"
# 例: "\|"
# 例: ","
# 規定値: " "
#
LogSeparator=" "


# "SiteDomain"には, Webサイトに到達するために利用される統計対象のWebサイトの
# 主たるドメイン名もしくは主たるイントラネットのサーバー名を設定します.
# 単一のログに複数のバーチャルホストのログが混在する場合, このパラメーター
# で統計対象とするバーチャルホストの名前をAWStatsに教えます(このため, ここで
# 設定するバーチャルホストの名前がログファイルに存在していることを確認し,
# %virtualnameタグを含むようにカスタマイズされたログ形式を利用していること
# を確認して下さい).
# しかし, 複数のホストを持っている場合, 一つのバーチャルホストについて
# 一つのログファイルを持つように設定する方がより良い解となります.
# この場合, このパラメーターはShowLinksOnUrlオプションが1に設定されている
# 場合に, 完全なリンクを作成するためのみに利用されます.
# メールサーバのログを解析する場合, メールサーバのドメイン名をここに設定して
# ください.
# 例: "myintranetserver"
# 例: "www.domain.com"
# 例: "ftp.domain.com"
# 例: "domain.com"
#
SiteDomain=""


# ここには, 誰かが統計対象サイトに到達するために利用される可能性がある,
# 上記以外の全てのドメイン名やアドレス, バーチャルホストのエイリアス名などを
# 設定します. パフォーマンスの劣化を最低限に押えるためにも, ここに設定する
# 名前やアドレスの数は最小限に押さえてください.
# "SiteDomain"に設定した値を繰り返して記述しても構いません.
# このパラメーターは, ログファイルのRefererフィールドを解析する際に利用され,
# RefererのURLが同一サイトのローカルURLなのか, 別のサイトのURLなのかを
# AWStatsが判断する際の助けとなります.
# ノート: 各々の値はスペースで区切って下さい.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# ノート: エイリアスのリストがファイルにまとめられている場合,
#         @/mypath/myfileのような形式を利用することもできます.
# 例: "www.myserver.com localhost 127.0.0.1 REGEX[mydomain\.(net|org)$]"
#
HostAliases="localhost 127.0.0.1 REGEX[myserver\.com$]"


# ホストをIPアドレスではなくドメイン名で報告させたい場合, AWStatsはDNSの
# 逆引きを行う必要があります(ログファイルの段階で逆引きが行われていない場合).
# DNSLookupが0に設定されている場合, 全てのホストはホスト名ではなくIPアドレス
# で報告されます(名前解決がログファイルの段階で行われている場合を除く).
# DNSLookupを1に設定する場合, DNSの逆引きがAWStatsの更新プロセスの
# パフォーマンスを著しく落すことを忘れないで下さい.
# 大規模なサイトではDNSLookupを1に設定するべきではありません.
# ノート: DNSの逆引きはIPv4でのみ行われます(IPv6の場合はipv6プラグインを有効に
#         してください).
# ノート: DNSの逆引きの結果は, 国別レポートの作成にも利用できます. しかし,
#         DNSの逆引きを行わない環境で正確な国別レポートを得るためには,
#         'geoip'もしくは'geoipfree'プラグインを有効にすることが推奨されます.
# 取り得る値:
# 0 - DNSの逆引きを行わない
# 1 - DNSの逆引きを完全に行う
# 2 - DNSキャッシュファイルに存在するIPアドレスについてのみのみ逆引きを行う
# 既定値: 2
DNSLookup=1


# AWStatsが統計データを更新する際に, AWStatsは解析結果をファイルに格納します
# (AWStatsデータベース). これらのファイルは全て"DirData"パラメーターで
# 指定されたディレクトリに書き込まれます. このパラメーターには, あなたが
# AWStatsにデータベースファイルを格納させたいディレクトリを設定して下さい.
# 警告: "AllowToUpdateStatsFromBrowser"機能(後述)を利用したい場合,
# Webサーバーが指定したディレクトリに対して"書き込み"権限を持っている
# 必要があります(WindowsのNTFSファイルシステムの場合, "変更"権限も必要と
# なります).
# 例: "/var/lib/awstats"
# 例: "../data"
# 例: "C:/awstats_data_dir"
# 既定値: "." (awstats.plと同一のディレクトリという意味)
#
# !!!!!注意!!!!!!
# デフォルト値である"."以外を設定する場合は, 必ず絶対パスで記述して下さい.
#
DirData="."


# awstats.plが置かれているcgi-binディレクトリの相対もしくは絶対URL.
# このパラメーターは, AWStatsがコマンドラインから-outputオプションつきで起動
# される場合にのみ利用されます(HTMLのレポートページのリンクを生成するため).
# 例: "/awstats"
# 既定値: "/cgi-bin"   (awstats.plが"/yourwwwroot/cgi-bin"にあるという意味)
#
DirCgi="/cgi-bin"


# AWStatsのアイコンディレクトリの相対もしくは絶対URL.
# 静的なレポートを構築する場合("... -output > outputpath/output.html"),
# outputpathからの相対ディレクトリをここに設定して下さい.
# 例: "/awstatsicon"
# 例: "../icon"
# デフォルト: "/icon" (アイコンディレクトリを"/mywwwroot/icon"にコピーする
# 必要あるという意味)
#
DirIcons="/icon"


# このパラメーターが1に設定されている場合, AWStatsは"更新"ボタンを統計
# ページに付加し, ブラウザからの更新ができるようにします. 警告, "更新"が
# ブラウザから行われた場合, AWStatsは設定ファイルに指定されているWebサーバ
# のユーザの権限でCGIとして動作します(Apacheの場合は"nobody", IISの場合は
# "IUSR_XXX"が既定値です). このため, "DireData"で指定されたディレクトリと
# 全ての既存の履歴ファイルawstatsMMYYYY[.xxx].txtが, そのユーザーの権限で
# 書き込みが可能な状態である必要があります. 必要に応じて読み書きの権限
# (WindowsのNTFSファイルシステムの場合は"変更"権限も必要)を与えて下さい.
# 警告: AWStatsの更新を頻繁に行わない場合, 更新処理に時間がかかって
# ブラウザがタイムアウトする可能性があります. このパラメータが0に設定
# されている場合, 更新処理はコマンドライン(もしくはタスクスケジューラー)
# からしか行うことができません
# 取り得る値: 0 もしくは 1
# 既定値: 0
#
AllowToUpdateStatsFromBrowser=0


# AWStatsは月単位でデータベースをソート, 保持しています(databasebreakオプ
# ションをコマンドラインから利用した場合を除く). しかし, コマンドラインで
# -month=allを選択するか, CGIのコンボフォームで'-年-'を選択して通年の
# レポートを作成しようとすると, AWStatsは1年分の全データを(月単位で)リロード
# して, 長い時間と多大なメモリとCPUリソースを費やして再度0からソートしなおさ
# なければなりません. 共有サーバ上で巨大サイト向けにAWStatsを提供しており,
# CPUリソースなど全く気にしないユーザを持つホスティング事業者にとって,
# これは少なからず問題となります.
# このため, 通年のレポートはデフォルトではコマンドラインからのみ作成することが
# できるようになっています. この挙動は, 以下のパラメータを0, 1, 2, 3のいずれか
# に設定することにより, 変更することができます.
# 取りうる値:
#  0 - 決して許可しない
#  1 - コマンドラインからのみ許可, -Year-はコンボボックスに現れない.
#  2 - コマンドラインからのみ許可, -Year-はコンボボックスには現れるが, 
#      実行を許可しない.
#  3 - コマンドライン/CGIのいずれからも可能
# 規定値: 2
#
AllowFullYearView=3



#-----------------------------------------------------------------------------
# オプショナルセットアップセクション (必須ではないがAWStatsの機能を向上)
#-----------------------------------------------------------------------------

# 更新処理が走る際に, AWStatsはロックファイルをTEMPもしくはTMPディレクトリに
# セットすることができます. ロックファイルは, 2つの更新プロセスが同時に走る
# ことにより発生する謎の衝突や, AllowToUpdateStatsFromBrowserが1に設定されて
# いる場合に想定されるDoS攻撃を回避することができます.
# しかし, このオプションを利用するように設定していると, ロックファイルが正常
# に削除されない場合, 問題が発生する可能性があります(プロセスがkillされた
# 場合には, 手動でロックファイルを削除する必要があります).
# このため, このオプションはデフォルトでは無効になっています(コンソール経由で
# サーバーにアクセスできない場合, このオプションを有効にしてはいけません).
# 変更: 即時に反映されます
# 取り得る値: 0 もしくは 1
# 既定値: 0
#
EnableLockForUpdate=0


# AWStatsは, 事前に手で作成しておいた静的なDNSキャッシュファイルを利用して
# DNSの逆引きを行うことができます. DNSキャッシュファイル名にパスが与えられて
# いない場合, AWStatsはDirDataのディレクトリを検索します. このファイルは
# 決して更新されません.
# このオプションは, DNSLookupが0に設定されている場合は使用されません.
# ノート: DNSキャッシュファイルは, 'minsince1970 ipaddress resolved_hostname'
# もしくは 'ipaddress resolved_hostname' のような形式で記述します.
# 変更: 更新が行われたときに有効になります
# 例: "/mydnscachedir/dnscache"
# 既定値: "dnscache.txt"
#
DNSStaticCacheFile="dnscache.txt"


# AWStatsは, AWStatsが前回実行された際に作成されたDNSキャッシュファイルを
# 利用してDNSの逆引きを行うこともできます. このファイルはAWStatsの更新処理が
# 実行されるたびに消去/再作成されます. あなたが作成/編集する必要はありません.
# AWStatsはDirDataのディレクトリにこのファイルを読み書きします.
# このオプションは, DNSLookupが1に設定されている時のみ使用されます.
# ノート: DNSStaticCacheFileが有効になっている場合, AWStatsはまず
#         DNSStaticCacheFileを, 続いてDNSLastUpdateCacheFileを確認します.
# 変更: 更新が行われたときに有効になります
# 例: "/mydnscachedir/dnscachelastupdate"
# 既定値: "dnscachelastupdate.txt"
#
DNSLastUpdateCacheFile="dnscachelastupdate.txt"


# DNSの逆引きを行うべきではない特定のIPアドレスを指定することができます.
# このオプションはDNSLookupが1に設定されている場合のみ利用されます.
# ノート: 各々の値の区切り文字にはスペースを利用します.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "123.123.123.123 REGEX[^192\.168\.]"
# 既定値: ""
#
SkipDNSLookupFor=""


# 以下の2つのパラメーターを利用すると, ユーザーが認証されていない状態で
# AWStatsがブラウザからコールされた場合に, AWStatsの設定ファイルを読まれて
# しまうことを防止できます.
# この機能を利用するには, AWStatsが保護された状態である必要があります
# (Apacheの場合は.htaccessを利用します. その他のWebサーバーについては,
# それぞれの設定マニュアルを参照して下さい).
# 変更: 即時に反映されます
# 取り得る値: 0 あるいは 1
# 既定値: 0
#
AllowAccessFromWebToAuthenticatedUsersOnly=0


# このパラメーターには, このドメインの設定ファイルを利用して作成された統計
# を閲覧する権限を持たせたいユーザーを列挙します.
# このパラメーターは, AllowAccessFromWebToAuthenticatedUsersOnlyが1に設定
# されている場合のみ利用されます.
# 変更: 即時に反映されます
# 例: "user1 user2"
# 例: "__REMOTE_USER__"
# 既定値: ""
#
AllowAccessFromWebToFollowingAuthenticatedUsers=""


# このパラメーターに値が設定されている場合, ブラウザで統計ページを閲覧する
# ユーザーのIPアドレスがチェックされ(AWStatsがCGIとして利用される場合),
# 閲覧者のIPアドレスがこのパラメーターで設定されたIPアドレス, もしくは
# IPアドレス範囲に含まれる場合のみ, 閲覧が許可されます.
# 変更: 即時に反映されます
# 例: "127.0.0.1 123.123.123.1-123.123.123.255"
# 既定値: ""
#
AllowAccessFromWebToFollowingIPAddresses=""


# 上で設定された"DirData"が存在しない場合, AWStatsはエラーを返します.
# しかし, AWStatsに作成させることもできます.
# このパラメーターは, DirDataに動的な値を設定していて
# (例: DirData="/home/__REMOTE_USER__"), 新しいユーザーが追加されるたびに
# 新しいディレクトリを作成したくないWebのホスティングを行っているプロバイダ
# が利用すると便利でしょう.
# 変更: 即時に反映されます
# 取り得る値: 0 もしくは 1
# 既定値: 0
#
CreateDirDataIfNotExists=0


# AWStatsが保存する履歴データベースの形式を選択できます.
# ノート: "xml"形式を利用すると, AWStatsが作成するデータベースファイルの
# ファイルサイズが, "text"形式の場合の3倍のサイズになります.
# 取りうる値: text もしくは xml
# 規定値: text
#
BuildHistoryFormat=text


# レポート出力ページをシンプルなHTML形式ではなくXMLに準拠した形式で作成
# したい場合, このパラメータに'xhtml'を指定してください(古いブラウザでは
# 適切に機能しない可能性があります.
# 変更: 即時に反映されます
# 取りうる値: html もしくは xhtml
# 規定値: html
#
BuildReportFormat=html


# AWStatsのデータベースはコマンドラインとブラウザの両方から更新される
# 可能性があります(CGIとして利用される場合). このため, AWStatsのデータ
# ベースファイルは, コマンドラインユーザとデフォルトのWebサーバユーザの
# 両者にの書き込み権限が必要となります(Unixの場合nobody,IISの場合IUSR_xxx).
# 更新処理(管理者権限で動作)とCGIプロセス(権限の低いユーザーで実行)における
# 権限の問題を回避するため, AWStatsは誰でも読み書きができる権限でデータ
# ベースファイルを保存します.
# デフォルトでは, AWStatsは更新されたファイルのデフォルトのユーザ権限を
# 保持します. もしあなたがAllowToUpdateStatsFromBrowserを1に設定しているの
# であれば, このパラメータを1に変更してもいいでしょう.
# 変更: 更新が行われたときに有効になります
# 取り得る値: 0 もしくは 1
# 既定値: 0
#
SaveDatabaseFilesWithPermissionsForEveryone=0


# AWStatsは処理済みのログを切り詰めることができます. AWStatsは新たに記録され
# たログだけを検出して処理することができるので, 例えこのパラメーターが0に設定
# されていても, 好きな時にAWStatsを起動できます.
# 設定値が0の場合, 切り詰めが行われないので, タスクスケジューラーやWebサーバー
# で頻繁に切り詰めを行うよう設定する必要があります.
# 1に設定されている場合, ログファイルの切り詰めはAWStatsが実行された時に
# 行われます. このパラメーターはIISでは動作しません(IISはログファイルの切り
# 詰めを許さないため).
# 変更: 更新が行われたときに有効になります
# 取り得る値: 0 もしくは 1
# デフォルト: 0
#
PurgeLogFile=0


# PurgeLogFileが1に設定されている場合, AWStatsは処理済みのログファイルを
# 切り詰めます. しかし, この値を1に設定すると, 処理されたログをアーカイブ
# ファイルとして残すことができます(別のログ分析ツールを利用したい場合など).
# アーカイブされたログファイルは, awstats_archive.configname[.suffix].log
# という名前で"DirData"に保存されます.
# このパラメータはPurgeLogFileが0に設定されている場合は利用されません.
# 変更: 更新が行われたときに有効になります
# 取り得る値: 0, 1, サフィックスとしてタグ(LogFileパラメータを参照)を利用可能
# 例: 1
# 例: %YYYY%MM%DD
# デフォルト: 0
#
ArchiveLogRecords=0


# 更新処理を行うたびに, AWStatsはその月の履歴ファイル(awstatsMMYYYY[.*].txt)
# を上書きします.
# 書き込みエラーが発生した場合(I/Oエラー, 容量不足など), 履歴ファイルは破損
# されてしまうため, 削除する必要があります. 履歴ファイルには過去に処理された
# ログの全ての情報が格納されているため, 削除してしまうと過去の統計結果も
# 失われてしまいます. このため, AWStatsに破損されていない最新のファイルを,
# .bakという名前で保存させておくことができます. このファイルは"DirData"
# ディレクトリに, その他の履歴ファイルと共に保存されます.
# 変更: 更新が行われたときに有効になります
# 取り得る値: 0 もしくは 1
# 既定値: 0
#
KeepBackupOfHistoricFiles=0


# Webサーバのデフォルトのインデックスページの名前.
# 変更: 更新が行われたときに有効になります
# 例: "index.php index.html default.html"
# 規定値: "index.php index.html"
#
DefaultFile="index.php index.html"


# 以下の基準にマッチするクライアントからのアクセスを処理対象外とします.
# ログファイル中のhostフィールドにIPアドレスが含まれる場合、基準はIPアドレスで
# 記述する必要があります.
# ログファイル中のhostフィールドが名前解決済みである場合、基準はホスト名で記述
# する必要があります. それ以外の場合はIPアドレスで記述します.
# "SkipHosts"の反対の意味を持つパラメータは"OnlyHosts"です.
# ノート: 各値の間はスペースで区切ります.
#         このパラメータは大文字/小文字を区別しません.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "127.0.0.1 REGEX[^192\.168\.] REGEX[^10\.]"
# 例: "localhost REGEX[^.*\.localdomain$]"
# 既定値: ""
#
SkipHosts=""


# 以下の基準にマッチするユーザエージェントを持つアクセスを処理対象外とします.
# ロボットを除外したい場合は, このパラメータに設定するのではなく, robots.pmを
# 更新するようにしてください.
# "SkipUserAgents"の反対の意味を持つパラメータは"OnlyUserAgents"です.
# ノート: 各値の間はスペースで区切ります.
#         このパラメータは大文字/小文字を区別しません.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "konqueror REGEX[ua_test_v\d\.\d]"
# 規定値: ""
#
SkipUserAgents=""


# 特定のURLへのアクセスを無視させたい場合は, SkipFilesを利用します.
# このオプションを利用し, 重要ではないURL(フレーム化されたメニュー, 隠し
# ページなど)をリスト化しておけば, それらのページを統計から除外することが
# できます. ここには, ログファイルに記録されるレコードと完全に一致する
# 相対URL, もしくはそれにマッチする正規表現を記述する必要があります.
# クエリパラメータを持つURLに対して利用する場合は, あらゆるケースを想定する
# 必要があります.
# 例えば, /badpage.phpを除外したい場合は, "/badpage.php"を追加します.
# 特定のディレクトリのすべてのファイルを無視させたい場合は,
# "REGEX[^\/directorytoexclude]"と記述します.
# "SkipFiles"の反対の意味を持つパラメーターは"OnlyFiles"です.
# ノート: 各値の間はスペースで区切ります.このパラメータで大文字/小文字の区別
#         を行うかどうかは, URLNotCaseSensitiveパラメータの設定値に依存します.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "/badpage.php /page.php?param=x REGEX[^\/excludedirectory]"
# 既定値: ""
#
SkipFiles=""


# SPAM referrerによるアクセスを除外したいのであれば, SkipReferrersBlackList
# を利用します. パラメータには, Referrerフィールドに適用するルールが記述された
# ローカルファイル名を指定する必要があります. パラメータが空白の場合,
# フィルタは行われません. 
# このファイルの記述例は, lib/blacklist.txtにあります.
# 変更: 更新が行われたときに有効になります
# 例: "/mylibpath/blacklist.txt"
# 規定値: ""
#
# 警告!! この機能を利用すると, AWStatsの実行速度は著しく低下します(AWStatsに
# 同梱されているブラックリストファイルを利用した場合, 実行時間は5倍になります).
#
SkipReferrersBlackList=""


# 指定した特定のホストからのアクセスのみを統計対象とします.
# 例えば, AWStatsに特定のホストからのアクセスのみをフィルタさせたい場合は,
# このパラメータにそのホストを追加します.
# DNSの逆引きがログファイルの段階で行われている場合, ホスト名で指定する必要
# があります. そのほかの場合は, IPアドレスで指定します.
# "OnlyHosts"の反対の意味を持つパラメーターは"SkipHosts"です.
# ノート: 各値の間はスペースで区切ります.
#         このパラメータは大文字/小文字を区別しません.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "127.0.0.1 REGEX[^192\.168\.] REGEX[^10\.]"
# 規定値: ""
#
OnlyHosts=""


# 指定した特定のユーザエージェントからのアクセスのみを統計対象とします.
# 例えば, AWStatsに特定のブラウザからのアクセスのみをフィルタさせたい場合は,
# このパラメータにそのユーザエージェントの文字列を追加します.
# "OnlyUserAgents"の反対の意味を持つパラメーターは"SkipUserAgents"です.
# ノート: 各値の間はスペースで区切ります.
#         このパラメータは大文字/小文字を区別しません.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "msie"
# 規定値: ""
#
OnlyUserAgents=""


# 指定した特定の認証されたユーザからのアクセスのみを統計対象とします.
# 例えば, AWStatsに特定のユーザからのアクセスのみをフィルタさせたい場合は,
# このパラメータにそのユーザ名を追加します.
# FTPのログをユーザ単位で解析するのに役立ちます．
# ノート: 各値の間はスペースで区切ります.
#         このパラメータは大文字/小文字を区別しません.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "john bob REGEX[^testusers]"
# 規定値: ""
#
OnlyUsers=""


# 以下の項目のいずれかにマッチするURLへのアクセスのみを統計対象とします.
# 例えば、AWStatsに特定のディレクトリのような特定の文字列を含むアクセス
# のみを統計対象としたい場合, そのディレクトリ名をこのパラメーターに
# 追加します.
# "OnlyFiles"の反対の意味を持つパラメーターは"SkipFiles"です。
# ノート: 各値の間はスペースで区切ります.このパラメータで大文字/小文字の区別
#         を行うかどうかは, URLNotCaseSensitiveパラメータの設定値に依存します.
# ノート: REGEX[value]のような形式で正規表現を利用することもできます.
# 変更: 更新が行われたときに有効になります
# 例: "REGEX[marketing_directory] REGEX[office\/.*\.(csv|sxw)$]"
# 規定値: ""
#
OnlyFiles=""


# "ヒット"としてのみカウントされ, "ヒット"および"ページ/ダウンロード"と
# してカウントされたくないURL(拡張子)を記述します. 通常は全てのイメージ
# ファイルの拡張子を記述します. イメージファイルは"ヒット"ではありますが,
# "閲覧されたページ"ではないからです. ここに設定された拡張子のURLは,
# 統計ページのトップのページ数に含まれません.
# ノート: 特定のURLそのものを統計から除外したい(ページ数にもヒット数にも
# カウントされたくない)場合, SkipFilesパラメーターを利用してください.
# 変更: 更新が行われたときに有効になります
# 例: "css js class gif jpg jpeg png bmp ico rss xml swf zip arj rar gz z bz2 wav mp3 wma mpg avi"
# 例: ""
# 規定値: "css js class gif jpg jpeg png bmp ico rss xml swf"
#
NotPageList="css js class gif jpg jpeg png bmp ico rss xml swf"


# デフォルトでは, ログファイルのレコードの中でサーバーが有効なHTTPコード
# (200もしくは304)を返している場合のみ, AWStatsは有効なヒットと認識します.
# それ以外のコードが返されている場合は, HTTPステータスチャートに入ります.
# 例えば, リダイレクション(302, 305)のようなHTTPの'コントロールコード'は,
# デフォルトでは含まれいてません. これらが訪問者の目に見えることがなく,
# ブラウザに別のページを要求させるためにプロトコルが交換するコードに過ぎない
# からです. 要求された別のページが200もしくは304コードとしてカウントされる
# ため, コントロールコードをこのパラメータに追加すると, 実際は1ページなのに
# 統計上は2ページが閲覧されたと報告されます.
# 変更: 更新が行われたときに有効になります
# 例: "200 304 302 305"
# 規定値: "200 304"
#
ValidHTTPCodes="200 304"


# デフォルトでは, このパラメータで指定された値と一致するリターンコードが解析
# しているログに含まれている場合にのみ, AWStatsはメールの転送が成功したと
# 認識します.
# 変更: 更新が行われたときに有効になります
# 例: "1 250 200"
# 規定値: "1 250"
#
ValidSMTPCodes="1 250"


# 特定のOSで動作する特定のWebサーバは(IIS-Windowsなど), 大文字/小文字が
# 異なる同一の値でのログインでも, 同一のログインだと認識します. AWStatsにも
# 同様に認識させるには, このパラメータを1に設定してください.
# 変更: 更新が行われたときに有効になります
# 取りうる値: 0 もしくは 1
# 規定値: 0
#
AuthenticatedUsersNotCaseSensitive=0


# 特定のOSで動作する特定のWebサーバは(IIS-Windowsなど), 大文字/小文字が
# が異なる同一のURLを, 同一のURLだと認識します. AWStatsにも同様に認識させる
# には, このパラメータを1に設定してください.
# 変更: 更新が行われたときに有効になります
# 取りうる値: 0 もしくは 1
# 規定値: 0
#
URLNotCaseSensitive=0


# 特定のURLに含まれるアンカー文字列を保持するか取り除くか.
# 変更: 更新が行われたときに有効になります
# 取りうる値: 0 もしくは 1
# 規定値: 0
#
URLWithAnchor=0


# URLのリンクでは, URLにパラメータリストを加えるために"?"が利用されます.
# 実際の文法は以下の通りです: /mypage.html?param1=value1&param2=value2
# しかし, 特定のサーバ/サイトでは, 別の文字をURLの静的な部分と動的な部分の
# 区切り文字として利用する場合があります. ここには, その際に利用される区切り
# 文字を列挙してください.
# 変更: 更新が行われたときに有効になります
# 例: "?;,"
# 規定値: "?;"
#
URLQuerySeparators="?;"


# クエリストリングが付与されているURLを, 別々のURLとして統計するかどうかを
# 決定します. 主に動的なページのURLを別々のページとして区別するかどうかを
# 決定する際に利用されます. このパラメーターが1に設定されている場合,
# mypage.html?id=x と mypage.html?id=y は別々のページとしてカウントされます.
# 警告, 膨大な数の動的なURL(ランダムなIDが挿入されるURLなど)を持つサイトで
# このパラメーターを1に設定した場合, AWStatsの実行時のメモリの消費量が
# 飛躍的に増大します. そのようなWebサイトでは, このパラメーターを1に
# しないか, 次に示すURLWithQueryWithOnlyFollowingParametersの利用を真面目に
# 検討してください(結果的にURLWithQueryWithoutFollowingParametersの方が適切
# だという結論になるかもしれません).
# 変更: 更新が行われたときに有効になります
# 取り得る値:
# 0 - URLのクエリストリングを除去して統計 (例: "/mypage.html")
# 1 - URLのクエリストリングをそのまま統計 (例: "/mypage.html?p=x&q=y")
# 既定値: 0
# 
URLWithQuery=0


# URLWithQueryが有効になっている場合, URLレポートですべてのパラメータを
# 含んだURLが報告されます. しかし, これらのパラメータの中でも特に必要と
# しない特定のパラメータが含まれている場合があります. 例えば, それが特定
# のページを示さない場合や, 同一URLであっても, アクセスするたびに異なる
# ランダムなIDが割り当てられる場合などがこれに該当するでしょう. このような
# 場合, URLの分類や操作, 格納を開始する前に, (分かっているのであれば)必要な
# パラメータのみを保持するようにAWStatsに伝えることが特に推奨されます.
# ここには必要とするパラメータを列挙します. 例えば, "param"と指定すれば,
# /mypage.cgi?param=abc&id=Yo4UomP9dと/mypage.cgi?param=abc&id=Mu8fdxl3r
# のそれぞれに1ヒットづつあった場合, /mypage.cgi?param=abcに2ヒットあった
# と報告されます.
# このパラメータは, URLWithQueryに0が設定されている場合には利用できません.
# また, URLWithQueryWithoutFollowingParametersと併用することはできません.
# 変更: 更新が行われたときに有効になります
# 例: "param"
# 規定値: ""
#
URLWithQueryWithOnlyFollowingParameters=""


# URLWithQueryが有効になっている場合, URLレポートですべてのパラメータを
# 含んだURLが報告されます. しかし, これらのパラメータの中でも特に必要と
# しない特定のパラメータが含まれている場合があります. 例えば, それが特定
# のページを示さない場合や, 同一URLであっても, アクセスするたびに異なる
# ランダムなIDが割り当てられる場合などがこれに該当するでしょう. このような
# 場合, URLの分類や操作, 格納を開始する前に, (分かっているのであれば)不必要
# なパラメータを除外するようにAWStatsに伝えることが特に推奨されます.
# ここには不必要なパラメータを列挙します. 例えば, "id"と指定すれば,
# /mypage.cgi?param=abc&id=Yo4UomP9dと/mypage.cgi?param=abc&id=Mu8fdxl3r
# のそれぞれに1ヒットづつあった場合, /mypage.cgi?param=abcに2ヒットあった
# と報告されます.
# このパラメータは, URLWithQueryに0が設定されている場合には利用できません.
# また, URLWithQueryWithOnlyFollowingParametersと併用することはできません.
# 変更: 更新が行われたときに有効になります
# 例: "PHPSESSID jsessionid"
# 規定値: ""
#
URLWithQueryWithoutFollowingParameters=""


# 外部Refererページの統計の中のReferer URLに含まれるクエリストリングを保持
# するかどうかを決定します. Refererページの動的なURLを区別するかどうかを
# 決定する際に利用されます. 1に設定されている場合, mypage.html?id=xと
# mypage.html?id=yとは別々の2つのRefererページとして識別されます.
# 変更: 更新が行われたときに有効になります
# 取り得る値:
# 0 - Referer URLのクエリストリングを除去して統計 (例: "/mypage.html")
# 1 - Referer URLのクエリストリングをそのまま統計 (例: "/mypage.html?p=x&q=y")
# 既定値: 0
#
URLReferrerWithQuery=0


# AWStatsは, 設定の問題を検出したり, 利便性を向上するための重要な情報を
# 表示したりすることができます.AWStatsが変更を促すまでは, 1のままにして
# おいて下さい.
# 変更: 即時に反映されます
# 取りうる値: 0 もしくは 1
# 規定値: 1
#
WarningMessages=1


# エラーが発生した場合, AWStatsはエラーに関するメッセージを出力します.
# 何らかの理由で(ほとんどの場合はセキュリティ上の理由で)エラーメッセージ
# を出力させたくない場合は, このパラメータを設定することにより, 個人的に
# カスタマイズした一般的なメッセージに変更することができます.
# 変更: 即時に反映されます
# 例: "An error occured. Contact your Administrator"
# 規定値: ""
#
ErrorMessages=""


# AWStatsを起動する際にdebug=xパラメータを指定すると, デバッグやトラブル
# 解決に役立つ様々な情報を出力することができます. デバッグメッセージの
# 出力を許可したい場合は(デフォルトではセキュリティ上の理由で無効になって
# います), このパラメータに0を設定してください.
# 変更: 即時に反映されます
# 取りうる値: 0 もしくは 1
# 規定値: 0
#
# 訳者注 : 説明と設定値が矛盾していますが, 1に設定するとデバッグメッセージ
# が有効になるはずです.　
#
DebugMessages=0


# 統計対象のログファイルの形式が有効かどうかを判断するため, AWStatsは
# NbOfLinesForCorruptedLogに設定されている行数分のログ形式が指定されている
# ログ形式と合致しない場合, エラーとして報告します.
# しかし, 統計対象サーバに対するワームやウイルスによる攻撃が, ログの膨大な
# 行数を破壊してしまう場合があります. AWStatsがログファイルの先頭にある,
# ウイルスのレコードのために停止してしまう場合, このパラメーターの数値を
# 上げるといいでしょう(非常に稀なケースです).
# 変更: 更新が行われたときに有効になります
# 既定値: 50
#
NbOfLinesForCorruptedLog=50


# 特定の状況において, CGIのリンク先をawstats.pl以外のスクリプトにしたい
# 場合があるかもしれません.
# その場合は, このパラメーターにそのスクリプト名を指定して下さい.
# 変更: 即時に反映されます
# 例: "awstatslauncher.pl"
# 例: "awstatswrapper.cgi?key=123"
# 規定値: ""
#
WrapperScript=""


# DecodeUAは, Roxen Web Serverを利用している場合は必ず1に設定します.
# Roxen Web ServerはUser Agent Fieldの中の全てのスペースを, "%20"に変換して
# しまいます. このため, AWStatsはロボットやOS, ブラウザの検知に失敗する
# 場合があります. Roxen Web Serverを利用している場合に限り, この設定を
# 1にして下さい.
# 変更: 更新が行われたときに有効になります
# 取りうる値: 0 もしくは 1
# 規定値: 0
#
DecodeUA=0


# MiscTrackerUrlを利用すると, AWStatsはいくつか補足的な情報を取得することが
# できます. 以下の情報は, これ以外の手段では取得することはできません:
# - Javascriptが無効にされているかどうか
# - Javaが有効かどうか
# - 画面解像度
# - 色数
# - Macromedia Directorプラグインの有無
# - Macromedia Shockwaveプラグインの有無
# - Realplayer G2プラグインの有無
# - QuickTime プラグインの有無
# - Mediaplayer プラグインの有無
# - Acrobat PDF プラグインの有無
# これらの機能を有効にするには, awstats_misc_tracker.jsファイルを, Webサーバ
# のドキュメントルートの/js/ディレクトリにコピーし, 以下のHTMLコードを
# インデックスページの最後(</BODY>の前)に付加する必要があります:
#
# <script type="text/javascript" src="/js/awstats_misc_tracker.js"></script>
# <noscript><img src="/js/awstats_misc_tracker.js?nojs=y" height=0 width=0 border=0 style="display: none"></noscript>
#
# このコードがインデックスページに付加されていないと, 上記の検知機能は全て
# 無効になります. レポートページに表示させるには, ShowScreenSizeStatsと
# ShowMiscStatsパラメータが1に設定されていることも確認する必要があります.
# /js/以外のディレクトリを利用したい場合は, awstats_misc_tracker.jsファイルの
# 中でawstatsmisctrackerurl変数の値を変更する必要があります.
# 変更: 更新が行われたときに有効になります
# 取りうる値: HTMLコードに付加されたJavaScriptファイルのフルパス
# 規定値: "/js/awstats_misc_tracker.js"
#
#
MiscTrackerUrl="/js/awstats_misc_tracker.js"



#-----------------------------------------------------------------------------
# オプショナルセットアップセクション:精度 (必須ではないがAWStatsの機能を向上)
#-----------------------------------------------------------------------------

# 以下の変数を設定すると, AWStatsの検知機能(ロボット, ブラウザ, OS, Referer,
# ファイルタイプなど)の正確さを指定することができます.
# 大規模なWebサイトやAWStatsを多数の利用者に提供しているISPでは, 2の代わりに
# 1(もしくは0)を設定するといいでしょう.
# 取りうる値:
#  0 = 検知を行わない,
#  1 = 標準的な検知能力
#  2 = 最高の検知能力
# 変更: 更新が行われたときに有効になります
# ノート: LevelForBrowsersDetectionには"allphones"という値を設定することも
#         できます. この場合, 携帯/PDFブラウザの詳細な検知が有効になります.
# 訳者注: "allphones"の検知に利用される携帯/PDFの機種情報のデータベースは,
#         海外(おそらく西欧)のものなので, 日本国内では事実上役に立ちません.
# 規定値: 2 (LevelForWormsDetectionのみ0)
#
LevelForBrowsersDetection=2         # 0 ブラウザの検知を無効にする.
                                    # 2 AWStatsの速度を2%低下させる
                                    # allphones AWStatsの速度を5%低下させる
LevelForOSDetection=2               # 0 OSの検知を無効にする.
                                    # 2 AWStatsの速度を3%低下させる
LevelForRefererAnalyze=2            # 0 接続元の検知を無効にする.
                                    # 2 AWStatsの速度を14%低下させる
LevelForRobotsDetection=2           # 0 ロボットの検知を無効にする.
                                    # 2 AWStatsの速度を2.5%低下させる
LevelForSearchEnginesDetection=2    # 0 検索エンジンの検知を無効にする.
                                    # 2 AWStatsの速度を9%低下させる
LevelForKeywordsDetection=2         # 0 検索文/検索語の検知を無効にする.
                                    # 2 AWStatsの速度を1%低下させる
LevelForFileTypesDetection=2        # 0 ファイルタイプの検知を無効にする.
                                    # 2 AWStatsの速度を1%低下させる
LevelForWormsDetection=0            # 0 ワームの検知を無効にする.
                                    # 2 AWStatsの速度を15%低下させる




#-----------------------------------------------------------------------------
# オプショナルセットアップセクション:外観 (必須ではないがAWStatsの機能を向上)
#-----------------------------------------------------------------------------

# AWStatsがCGIとして利用される場合, 表示にフレームを利用することができます.
# フレームは統計を動的に閲覧する際のみに有効となります. コマンドラインから
# 統計ページを生成した場合, このオプションは利用されず, フレーム無しのページ
# が生成されます.
# 取り得る値: 0 もしくは 1
# 既定値: 1
#
UseFramesWhenCGI=1


# このパラメーターは, 詳細レポート画面を開く際に, メインページとは別の新しい
# ウインドゥを立ち上げて表示するかどうかを決定します.
# 取り得る値:
# 0 - 全ての統計を単一のウインドゥに表示します.
# 1 - フレームを利用している場合を除き, 詳細レポート用の新しいウインドゥを
#     開きます.
# 2 - フレームを利用している場合を含み, 常に詳細レポート用に新しいウインドゥ
#     を開きます.
# 既定値: 1
#
DetailedReportsOnNewWindows=1


# サーバが返すHTTPのヘッダに, 統計ページのキャッシュの有効期間(秒単位)を設定
# することができます. このパラメータは, 統計ページが-staticlinkオプション付き
# で生成された際には利用されません.
# 例: 3600
# 既定値: 0
#
Expires=0


# 巨大なページが生成される事を防止するため, 統計の全ての行の合計がここに
# 設定した行数を越えないようにAWStatsを設定することができます(適用すべき
# その他の制限が無い場合).
# 既定値: 1000
#
MaxRowsInHTMLOutput=1000


# 主言語を指定します(ISO-639-1で規定されている言語コード).
# 取り得る値:
#  アルバニア語=al, ボスニア語=ba, ブルガリア語=bg, カタロニア語=ca,
#  中国語(台湾)=tw, 中国語(簡体字)=cn, クロアチア語=hr, チェコ語=cz,
#  デンマーク語=dk, オランダ語=nl, 英語=en, エストニア語=et, バスク語=eu,
#  フィンランド語=fi, フランス語=fr, ガリシア語=gl, ドイツ語=de,
#  ギリシャ語=gr, ヘブライ語=he, ハンガリー語=hu, アイスランド語=is,
#  インドネシア語=id, イタリア語=it, 日本語=jp, 韓国語=kr, ラトヴィア語=lv,
#  ノルウェー語(ニーノシク)=nn, ノルウェー語(ブークモール)=nb,
#  ポーランド語=pl, ポルトガル語=pt, ポルトガル語(ブラジル)=br,
#  ルーマニア語=ro, ロシア語=ru, セルビア語=sr, スロベキア語=sk,
#  スロヴェニア語=si, スペイン語=es, スゥェーデン語=se, トルコ語=tr,
#  ウクライナ語=ua, ウェールズ語=wlk.
#  ブラウザが受け入れる第一の言語=auto
# 既定値: "auto"
#
Lang="jp"


# 言語ファイルの場所を指定します.
# 例: "/usr/share/awstats/lang"
# 既定値: "./lang" (langディレクトリがawstats.plと同じ場所にあると言う意味)
#
DirLang="./lang"


# レポートへのリンクを持つメニューヘッダの表示を行うかどうか.
# 取り得る値: 0 もしくは 1
# 既定値: 1
#
ShowMenu=1					


# メインページでどのレポートを見たいのか, それぞれのレポートについて何の
# 項目を見たいのかをここで設定します.
# 取りうる値:
#  0  - レポート自体を非表示にする.
#  1  - レポートを規定値の項目で表示する.
# XYZ - X,Y,Z...のコードで指定した情報のみをレポートで表示する.
#       X,Y,Z...は以下のいずれかの文字を取る:
#        U = 一意な訪問者数
#        V = 訪問者数
#        P = ページ数
#        H = ヒット数 (もしくはメール数)
#        B = バイト数 (もしくはメールログ上のメールサイズの合計)
#        L = 最終訪問日
#        E = 最初に閲覧したページ
#        X = 最後に閲覧したページ
#        C = 節約された帯域幅 (mod_gzip, あるいはmod_deflate)
#        M = 平均メールサイズ (メールログ)
#

# 月別サマリの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: UVPHB, 取りうるコード: UVPHB
ShowSummary=UVPHB

# 月別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: UVPHB, 取りうるコード: UVPHB
ShowMonthStats=UVPHB

# 日別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: VPHB, 取りうるコード: VPHB
ShowDaysOfMonthStats=VPHB

# 曜日別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: PHB, 取りうるコード: PHB
ShowDaysOfWeekStats=PHB

# 時間帯別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: PHB, 取りうるコード: PHB
ShowHoursStats=PHB

# ドメイン/国別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: PHB, 取りうるコード: PHB
ShowDomainsStats=PHB

# ホスト別レポートの表示
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: PHBL, 取りうるコード: PHBL
ShowHostsStats=PHBL

# 認証されたユーザのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: 0, 取りうるコード: PHBL
ShowAuthenticatedUsers=0

# ロボットのレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: HBL, 取りうるコード: HBL
ShowRobotsStats=HBL

# ワームのレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 0 (0以外に設定する場合は, LevelForWormsDetectionも参照のこと),
# 取りうるコード: HBL
ShowWormsStats=0

# メールの送信者のレポートの表示 (メールログを解析する場合用)
# コンテクスト: メール
# 規定値: 0, 取りうるコード: HBML
ShowEMailSenders=0

# メールの受信者のレポートの表示 (メールログを解析する場合用)
# コンテクスト: メール
# 規定値: 0,  取りうるコード: HBML
ShowEMailReceivers=0

# セッションのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: 1, 取りうるコード: None
ShowSessionsStats=1

# ページ-URLのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: PBEX, 取りうるコード: PBEX
ShowPagesStats=PBEX

# ファイルタイプのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: HB, 取りうるコード: HBC
ShowFileTypesStats=HB

# ファイルサイズのレポートの表示 (未実装)
# コンテクスト: Web, ストリーミング, メール, FTP
# 規定値: 1, 取りうるコード: None
ShowFileSizesStats=0

# ダウンロードのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: HB, 取りうるコード: HB
ShowDownloadsStats=HB	

# OSのレポートの表示
# コンテクスト: Web, ストリーミング, FTP
# 規定値: 1, 取りうるコード: None
ShowOSStats=1

# ブラウザのレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 1, 取りうるコード: None
ShowBrowsersStats=1

# 画面サイズのレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 0 (1に設定されている場合, MiscTrackerUrlも参照のこと)
# 取りうるコード: None
ShowScreenSizeStats=0

# 接続元のレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: PH, 取りうるコード: PH
ShowOriginStats=PH

# 検索文のレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 1, 取りうるコード: None
ShowKeyphrasesStats=1

# 検索語のレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 1, 取りうるコード: None
ShowKeywordsStats=1

# その他のレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: a (MiscTrackerUrlパラメータも参照のこと), 取りうるコード: anjdfrqwp
ShowMiscStats=a

# HTTPエラーのレポートの表示
# コンテクスト: Web, ストリーミング
# 規定値: 1, 取りうるコード: None
ShowHTTPErrorsStats=1

# SMTPエラーのレポートの表示 (メールログを解析する場合用)
# コンテクスト: メール
# 規定値: 0, 取りうるコード: None
ShowSMTPErrorsStats=0

# クラスタのレポートの表示 (LogFormatに%clusterタグが含まれている必要あり)
# コンテクスト: Web, ストリーミング, FTP
# 規定値: 0, 取りうるコード: PHB
ShowClusterStats=0


# グラフの後に数値が表示されるレポートがあります. 数値を表示したくない場合
# (レポートサイズを小さくしたい場合など), このオプションを0に設定して下さい.
# 取り得る値: 0 もしくは 1
# 規定値: 1
#
# 月別レポートに対応する数値の表示
AddDataArrayMonthStats=1
# 日別レポートに対応する数値の表示
AddDataArrayShowDaysOfMonthStats=1
# 曜日別レポートに対応する数値の表示
AddDataArrayShowDaysOfWeekStats=1
# 時間帯別レポートに対応する数値の表示
AddDataArrayShowHoursStats=1


# 接続元レポートには, 取得したヒットの接続元が含まれています. このレポートに,
# 同一サイトのページを接続元とするヒットを含めることもできます.
# 取り得る値: 0 もしくは 1
# 規定値: 0
#
IncludeInternalLinksInOriginSection=0


# 以下のパラメータは, 特定のレポートの表示上限行数を設定します.
#
# 国/ドメインの統計
MaxNbOfDomain = 10
MinHitDomain  = 1
# ホストの統計
MaxNbOfHostsShown = 10
MinHitHost    = 1
# 認証されたユーザの統計
MaxNbOfLoginShown = 10
MinHitLogin   = 1
# ロボットの統計
MaxNbOfRobotShown = 10
MinHitRobot   = 1
# ダウンロードの統計
MaxNbOfDownloadsShown = 10
MinHitDownloads = 1
# ページの統計
MaxNbOfPageShown = 10
MinHitFile    = 1
# OSの統計
MaxNbOfOsShown = 10
MinHitOs      = 1
# ブラウザの統計
MaxNbOfBrowsersShown = 10
MinHitBrowser = 1
# 画面サイズの統計
MaxNbOfScreenSizesShown = 5
MinHitScreenSize = 1
# ウインドゥサイズの統計(未実装)
MaxNbOfWindowSizesShown = 5
MinHitWindowSize = 1
# Refererの統計
MaxNbOfRefererShown = 10
MinHitRefer   = 1
# 検索文の統計
MaxNbOfKeyphrasesShown = 10
MinHitKeyphrase = 1
# 検索語の統計
MaxNbOfKeywordsShown = 10
MinHitKeyword = 1
# メールの送信者/受信者の統計
MaxNbOfEMailsShown = 20
MinHitEMail   = 1


# 曜日別の統計の開始日を日曜日にするか月曜日にするかを選択します.
# 取り得る値:
# 0 - 週は日曜日から開始
# 1 - 週は月曜日から開始
# 規定値: 1
#
FirstDayOfWeek=0


# 表示したい別の言語の翻訳へのリンクとなる国旗をリストします.
# 利用可能な国旗/言語コードについては, Langパラメータを参照してください.
# 国旗のリンクを表示したくない場合は, ""を設定してください.
# このパラメータは, ShowMenuパラメータが1の場合にのみ有効になります.
# 取り得る値: "" あるいは "半角スペースで区切られた言語コード"
# 例: "en es fr nl de"
# 規定値: ""
#
ShowFlagLinks=""


# 統計画面に表示されるURLを, クリックできるリンクにするかどうかを設定します.
# 取り得る値: 0 もしくは 1
# 既定値: 1
#
ShowLinksOnUrl=1


# AWStatsがレポートページのHTMLリンクを作成する際に, AWStatsは"http://"から
# 開始するリンクを作成します．もしリンク先がHTTPSで始まるURLならば, ここに
# HTTPSリンクのルートを設定してください. もしWebサイト全体がSSLで保護されて
# いるのであれば, "/"を設定してください.
# このパラメータは, ShowLinksOnUrlに0が設定されている場合には利用されません.
# 例: "/shopping"
# 例: "/"
# 規定値: ""
#
UseHTTPSLinkForUrl=""


# 統計ページに表示されるURLの最大長(文字数)を設定します. この設定は画面上の
# 表示のみに影響するため, リンク自体が無効になることはありません.
# 規定値: 64
#
MaxLengthOfShownURL=64


# AWStatsが作成するレポートの最上部に付加するHTMLをここに設定してください.
# 規定値: ""
#
HTMLHeadSection=""


# AWStatsが作成するレポートの最下部に付加するHTMLをここに設定してください.
# バナー広告などを入れるといいでしょう.
# 規定値: ""
#
HTMLEndSection=""


# デフォルトでは, AWStatsのページは robots=noindex,nofollow というメタタグを
# 含んでいます.
# 統計結果を検索エンジンにインデックスされることを望む場合は, このオプション
# を1に設定してください.
# Default: 0
#
MetaRobot=0


# ロゴとロゴのリンク先をカスタマイズすることができます.
# Logoはイメージファイルのファイル名($DirIcons/otherディレクトリに置かれて
# いなければなりません)である必要があります.
# LogoLinkには, Logoをクリックした時に飛ぶ先のURLを設定します.
# 規定値: "awstats_logo6.png"
#
Logo="awstats_logo6.png"
LogoLink="http://www.bflets.dyndns.org/Tools/AWStatsJpn.html"


# 画像のバーの最大の幅/高さを設定します.
# 既定値: 260/90
#
BarWidth   = 260
BarHeight  = 90


# 外観を変更する手段として, AWStatsに特定のCSS(Cascading Style Sheet)を利用
# させることができます. スタイルシートを作成する際は, AWStatsのwwwroot/css
# ディレクトリに置かれているサンプルをカスタマイズするといいでしょう.
# 例: "/awstatscss/awstats_bw.css"
# 例: "/css/awstats_bw.css"
# 規定値: ""
#
StyleSheet=""


# 以下の色を指定するパラメーターを利用すると, AWStatsの外観を変更することが
# できます(StyleSheetパラメーターが設定されていない場合)
# 例: color_name="RRGGBB"       # RRGGBBは, 16進でRGBを数値化した値
#
color_Background="FFFFFF"
# メインページの背景色 (既定値 = "FFFFFF")

color_TableBGTitle="CCCCDD"
# テーブルタイトルの背景色 (既定値 = "CCCCDD")

color_TableTitle="000000"
# テーブルタイトルの文字の色 (既定値 = "000000")

color_TableBG="CCCCDD"
# テーブルの背景色 (既定値 = "CCCCDD")

color_TableRowTitle="FFFFFF"
# 横列の見出しの文字の色 (既定値 = "FFFFFF")

color_TableBGRowTitle="ECECEC"
# 横列の見出しの背景色 (既定値 = "ECECEC")

color_TableBorder="ECECEC"
# テーブルボーダーの色 (既定値 = "ECECEC")

color_text="000000"
# 文字の色 (既定値  = "000000")

color_textpercent="606060"
# パーセントの数値の文字の色 (既定値 = "606060")

color_titletext="000000"
# 色付の横列見出し行内の文字の色 (既定値 = "000000")

color_weekend="EAEAEA"
# 週末曜日の色 (既定値 = "EAEAEA")

color_link="0011BB"
# リンクの色 (既定値 = "0011BB")

color_hover="605040"
# リンクをマウスがポイントした時の色 (既定値 = "605040")

color_u="FFAA66"
# 一意な訪問者数の背景色 (既定値 = "FFAA66")

color_v="F4F090"
# 訪問者の背景色 (既定値 = "F4F090")

color_p="4477DD"
# ページ数の背景色 (既定値 = "4477DD")

color_h="66DDEE"
# ヒット数の背景色 (既定値 = "66DDEE")

color_k="2EA495"
# バイト数の背景色 (既定値 = "2EA495")

color_s="8888DD"
# 検索回数の背景色 (既定値 = "8888DD")

color_e="CEC2E8"
# 最初に閲覧の背景色 (既定値 = "CEC2E8")

color_x="C1B2E2"
# 最後に閲覧の背景色 (既定値 = "C1B2E2")


#-----------------------------------------------------------------------------
# プラグイン
#-----------------------------------------------------------------------------

# ロードしたいプラグインファイルをここに全て列挙します.
# プラグインファイルの拡張子は.pmで, 'plugins'ディレクトリに置かれている
# 必要があります.
# プラグインに必要とされるPerlモジュールの導入を確認してから, LoadPlugin行の
# コメントを外してプラグインを有効にして下さい.

# プラグイン名: Tooltips
# 必要とされるモジュール: なし
# パラメータ: なし
# 機能: HTMLレポートページに, Tooltipポップアップヘルプボックスを付加する.
# 注意: この機能を利用すると, HTMLレポートページのページサイズが大きくなり,
# サーバの負荷や消費する帯域が大きくなります.
#
LoadPlugin="tooltips"

# プラグイン名: DecodeUTFKeys
# 必要とされるモジュール: Encode および URI::Escape
# パラメータ: なし
# 機能: 参照元検索エンジンにより検索語/検索文がUTF8でエンコードされていても,
# AWStatsが(指定された文字コードで)それらを正しく表示できるようにします.
#
#LoadPlugin="decodeutfkeys"

# プラグイン名: IPv6
# 必要とされるモジュール: Net::IP および Net::DNS
# パラメータ: なし
# 機能: このプラグインを利用すると, IPv6のアドレスをDNSで逆引きできるように
# なります.
#
#LoadPlugin="ipv6"

# プラグイン名: HashFiles
# 必要とされるモジュール: Storable
# パラメータ: なし
# 機能: AWStatsのDNSキャッシュファイルを, ハッシュ形式で読み書きするように
# します.
# この機能を利用すると, 特に巨大なWebサイトでDNSキャッシュファイルの読み書き
# の高速化を実現できます.
#
#LoadPlugin="hashfiles"

# プラグイン名: UserInfo
# 必要とされるモジュール: なし
# パラメータ：なし
# 機能: 認証されたユーザのレポートに, 付加情報(氏名, オフィス情報など)を
# 表示します.
# 2つのフィールド(第一フィールドにログインID, 第二フィールドに表示したいテキ
# ストをタブ区切りで記述)を持ったuserinfo.myconfig.txtという名前のテキスト
# ファイルをDirDataディレクトリに事前に用意しておく必要があります.
#
#LoadPlugin="userinfo"

# プラグイン名: HostInfo
# 必要とされるモジュール: Net::XWhois
# パラメータ: なし
# 機能: ホストのレポートに, ホスト情報(whoisレコードのような情報)をポップ
# アップさせるリンクを表示します.
#
#LoadPlugin="hostinfo"

# プラグイン名: ClusterInfo
# 必要とされるモジュール: なし
# パラメータ: なし
# 機能: 各クラスタについて, 追加情報(完全なホスト名等)をクラスタレポートに
# 追加します.
# 2つのフィールド(第一フィールドにクラスタ番号, 第二フィールドに表示したい
# テキストをタブ区切りで記述)を持ったclusterinfo.myconfig.txtという名前の
# テキストファイルをDirDataディレクトリに事前に用意しておく必要があります.
# このプラグインは,  ShowClusterStatsに0が設定されている場合, もしくはカスタ
# マイズされたログ形式で%clusterタグが利用されていない場合は, 意味を持ちません.
#
#LoadPlugin="clusterinfo"

# プラグイン名: UrlAliases
# 必要とされるモジュール: なし
# パラメータ: なし
# 機能: URLレポートのURLの前にページ情報(ページタイトル, 定義...)を表示します.
# 2つのフィールド(第一フィールドにURL, 第二フィールドに表示したいテキストを
# タブ区切りで記述)を持つurlalias.myconfig.txtという名前のテキストファイルを
# DirDataディレクトリに事前に用意しておく必要があります.
#
#LoadPlugin="urlalias"

# プラグイン名: TimeHiRes
# 必要とされるモジュール: Time::HiRes (Perl 5.8未満の場合)
# 機能: -showstepsオプションを利用した際に報告される時間がミリ秒単位になります.
# デバッグ用です.
#
#LoadPlugin="timehires"		

# プラグイン名: TimeZone
# 必要とされるモジュール: Time::Local
# パラメータ: [タイムゾーンのオフセット値]
# 機能: 異なるタイムゾーン向けにAWStatsがタイムスタンプを調整できるように
# なります.
# このプラグインを利用すると, AWStatsの処理速度が10%程度落ちます !!!!!!!
#
# LoadPlugin="timezone"
# LoadPlugin="timezone +2"
# LoadPlugin="CET"
#
#LoadPlugin="timezone +2"

# プラグイン名: Rawlog
# 必要とされるモジュール: なし
# パラメータ: なし
# 機能: このプラグインを有効にすると, AWStatsのメインページに現在の生ログ
# ファイルを閲覧するためのフォームが付加されます.
# フィルタを利用することもできます.
#
#LoadPlugin="rawlog"

# プラグイン名: GraphApplet
# 必要とされるモジュール: なし
# パラメータ: [オーバーライドするCSSのクラス]
# 機能: 一部のグラフが3Dで描画されるようになります.
#
#LoadPlugin="graphapplet /awstatsclasses"       # 試験的に実装されている機能

# プラグイン名: GraphGoogleChartAPI
# 必要とされるモジュール: なし
# パラメータ: なし
# 機能: 標準のレポートを無償で利用できるGoogle APIで生成したイメージで置換
# します. 国別データが利用可能で, 複数の国のヒットがあった場合は, Google
# Visualizationsを利用した地図が生成されます.
# 注意: レポートの生成には, 表示する端末がインターネットにアクセスできる必要
# があります. Googleに送信されるデータは統計値, 凡例と国名のみです.
# 警告: このプラグインは, BuildReportFormat=xhtmlオプションとの互換性があり
# ません.
#
#LoadPlugin="graphgooglechartapi"

# プラグイン名: GeoIPfree
# 必要とされるモジュール: Geo::IPfree version 0.2+ (Graciliano M.P.)
# パラメータ: なし
# 機能: 国別の統計を, インターネットのIP-国データベースを利用して作成します.
# このプラグインは, イントラネットのログファイルを解析する際には無意味です.
# ノート: このプラグイン(PerlのGeo::IPFreeモジュールが必要, 無料だが更新頻度
# が低い)を利用するか, GeoIPプラグイン(Maxmindが提供するPerlのGeo::IPFree
# モジュールが必要, やはり無料だが更新頻度が高い)のどちらかを選択する必要が
# あります.
# 注意: Activestateが提供するPerlには, 壊れたバージョンのGeo::IPfree 0.2
# が含まれています. このため, どこか別の場所(www.cpan.orgなど)から導入して
# ください.
# このプラグインを利用するとAWStatsの処理速度は10%程度低下します!
#
#LoadPlugin="geoipfree"

# MAXMIND GEO IPモジュールについて: Maxmindのモジュールの注意については, 
# 付属の文書を参照してください

# プラグイン名: GeoIP
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/geoip.dat[+/pathto/override.txt]]
# 機能: 国別の統計を作成し, 国名をホストテーブルのエントリに追加します.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip GEOIP_STANDARD /pathto/GeoIP.dat"

# プラグイン名: GeoIP_City_Maxmind
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/GeoIPCity.dat[+/pathto/override.txt]]
# 機能: このプラグインはホストフィールドにカラムを追加し, ページビューと
# ヒット数について，地域名と都市名とを追跡します.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip_city_maxmind GEOIP_STANDARD /pathto/GeoIPCity.dat"

# プラグイン名: GeoIP_ASN_Maxmind
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/GeoIPASN.dat[+/pathto/override.txt][+http://linktoASlookup]]
# 機能: このプラグインはホストIPが登録されているAS番号のレポートを追加します.
# このプラグインは, DCに登録されていれば, ISP情報も表示することができます.
# 追加登録情報の検索するためのリンクを提供することも可能です. パラメータの最後
# にリンクを追加すれば, レポートページに完全なAS番号を含むリンクが追加されます.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip_asn_maxmind GEOIP_STANDARD /usr/local/geoip.dat+http://enc.com.au/itools/aut-num.php?autnum="

# プラグイン名: GeoIP_Region_Maxmind
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/GeoIPRegion.dat[+/pathto/override.txt]]
# 機能: このプラグインは地域別のヒット数のレポートを追加します. 米国とカナダの
# 地域のみが検知可能です.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip_region_maxmind GEOIP_STANDARD /pathto/GeoIPRegion.dat"

# プラグイン名: GeoIP_ISP_Maxmind
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/GeoIPISP.dat[+/pathto/override.txt]]
# 機能: このプラグインはISP別のヒット数のレポートを追加します.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip_isp_maxmind GEOIP_STANDARD /pathto/GeoIPISP.dat"

# プラグイン名: GeoIP_Org_Maxmind
# 必要とされるモジュール: Geo::IP あるいは Geo::IP::PurePerl (Maxmind)
# パラメータ: [GEOIP_STANDARD | GEOIP_MEMORY_CACHE] [/pathto/GeoIPOrg.dat[+/pathto/override.txt]]
# 機能: このプラグインは, 組織名別のヒット数のレポートを追加します.
# geoipデータファイルへのパスに含まれる半角スペースは"%20"に置換してください.
#
#LoadPlugin="geoip_org_maxmind GEOIP_STANDARD /pathto/GeoIPOrg.dat"


#-----------------------------------------------------------------------------
# エクストラセクション
#-----------------------------------------------------------------------------

# 独自のレポートを作成することができます. この場合, 列と行のキーを自分で選択
# する必要があります. この機能は, 例えばマーケティング用途や, 商品の注文の
# トラッキングを行う場合などに特に有用でしょう.
# この機能を利用するには, エクストラセクションのパラメータを全て自分で編集する
# 必要があります. 一連のパラメータのセットで一つのレポートを構成します.
# 複数のレポートを作成する場合は, セクションをコピーして数値を変更すると
# いいでしょう.
#
# 警告: エクストラセクションのセットアップを誤ると, メモリを食い尽くすほど
# 巨大な配列ができてしまい, 数回更新しただけでAWStatsが利用不可能な状態に
# 陥る可能性があります. このため, 慎重にセットアップを行ってください.
# ほとんどの場合, この機能を利用する必要はありません.
#
# ExtraSectionNameXには, 独自レポートのタイトルを指定します.
# ExtraSectionCodeFilterXには, レコードコードフィールドがマッチしなければ
#   ならないコードのリストを記述します. コードに対するテストを行わない場合は, 
#   空の文字列を指定してください.
# ExtraSectionConditionalXには, ヒットとしてカウントする条件を指定します.
#   (URL,URLWITHQUERY,QUERY_STRING,REFERER,UA,HOSTINLOG,HOST,VHOST,extraX)
#   のうちの一つを指定し, ","の後に正規表現で条件を指定します. OR条件を指定
#   する場合は"||"を利用します.
# ExtraSectionFirstColumnTitleXには, レポートの最初のカラムのタイトルを指定
#   します.
# ExtraSectionFirstColumnValuesXには, いずれから(URL, URLWITHQUERY,
#   QUERY_STRING, REFERER, UA, HOSTINLOG, HOST, VHOST, extraX), どのように
#   (正規表現を利用して指定)値を抽出するかをAWStatsに教える文字列を指定しま
#   す. 検出された値の種類が, レポートの最初のカラムに個別に表示されます.
#   値の種類は無限ではないので, 注意してください.
# ExtraSectionFirstColumnFormatXには, 値を書き込むための文字列を指定します.
# ExtraSectionStatTypesXには, カウント対象を指定します. 標準的なコード文字
#   (Pはページ数, Hはヒット数, Bはバイト数, Lは最終アクセス)を利用できます.
# ExtraSectionAddAverageRowXを指定すると, レポートの最下部に平均値の列が追加
#   されます.
# ExtraSectionAddSumRowXを指定すると, レポートの最下部に合計値の列が追加
#   されます.
# MaxNbOfExtraXには, レポートに表示する最大列数を指定します.
# MinHitExtraXには, レポートに表示されるために必要とされる最小ヒット数を
#   指定します.
#

# "order.cgi"という名前のスクリプトを利用してオーダーされた上位20商品を
# 表示するレポートの例
#ExtraSectionName1="Product orders"
#ExtraSectionCodeFilter1="200 304"
#ExtraSectionCondition1="URL,\/cgi\-bin\/order\.cgi||URL,\/cgi\-bin\/order2\.cgi"
#ExtraSectionFirstColumnTitle1="Product ID"
#ExtraSectionFirstColumnValues1="QUERY_STRING,productid=([^&]+)"
#ExtraSectionFirstColumnFormat1="%s"
#ExtraSectionStatTypes1=PL
#ExtraSectionAddAverageRow1=0
#ExtraSectionAddSumRow1=1
#MaxNbOfExtra1=20
#MinHitExtra1=1


# ここで指定するグローバルパラメータであるExtraTrackedRowsLimitは, エクストラ
# セクションでレポートされる最大列数を指定します. このパラメータは, エクストラ
# セクションの不適切な設定のため, 莫大なメモリが消費されてしまうことを防止
# します. このパラメータはエクストラセクションのすべてに適用され, エクストラ
# セクションのいかなるレポートも, ExtraTrackedRowsLimitで設定する制限を越えた
# 列数を持つレポートを生成することはできません.
# エクストラセクションで生成されるレポートがここで設定する列数を超えることが
# 明らかである場合, このパラメータを変更する必要があります. さもないと,
# AWStatsはエラーを出力して停止してしまいます. 
# 例: 2000
# 規定値: 500
#
ExtraTrackedRowsLimit=500


#-----------------------------------------------------------------------------
# インクルード
#-----------------------------------------------------------------------------

# ファイル名を指定して, 別の設定ファイルの内容をインクルードできます.
# 多数のバーチャルサーバを運用しているユーザが, 多数の設定ファイル中の共通の
# 設定を1つのファイルで行いたい場合に有用でしょう.
# 設定ファイルとインクルードファイルの両方で同一の変数が定義されている場合,
# 単一の値を取る変数の場合は後から読み込んだ設定を, 複数の値リストを取る
# 変数の場合は二者を組み合わせた値をAWStatsが利用することに注意してください.
#

#Include ""

